{"version":3,"sources":["components/header/nav.js","components/startPage/startPage.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","collapse","isWideEnough","onClick","bind","assertThisInitialized","setState","react_default","a","createElement","id","mdbreact_esm","light","expand","className","href","isOpen","navbar","right","to","React","Component","StartPage","sm","activeItem","length","showControls","showIndicators","itemId","fab","icon","App","BrowserRouter","fluid","header_nav","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7d5a4455.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink} from 'mdbreact';\nimport './nav.css'\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      isWideEnough: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n\n  render() {\n    return (\n\n      //        FIXED VERSION 1.0\n     \n        // <header className=\"header \">\n         \n        // <MDBNavbar className=\"navBar  z-depth-0\" light expand=\"md\"  >\n        //   <MDBNavbarBrand href=\"/\" className=\"black-text\" >\n        //         <strong>A+B LOGO</strong>\n        //       </MDBNavbarBrand>\n        //       {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\n        //       <MDBCollapse isOpen={this.state.collapse} navbar>\n        //       <MDBNavbarNav right>\n        //           <MDBNavItem >\n        //         <MDBNavLink className=\"black-text\" to=\"/projekty\">PROJEKTY</MDBNavLink>\n        //           </MDBNavItem>\n        //           <MDBNavItem>\n        //         <MDBNavLink className=\"black-text\" to=\"/architektura\">ARCHITEKTURA</MDBNavLink>\n        //           </MDBNavItem>\n        //           <MDBNavItem>\n        //         <MDBNavLink className=\"black-text\" to=\"/wnetrza\">WNĘTRZA</MDBNavLink>\n        //           </MDBNavItem>\n        //           <MDBNavItem>\n        //         <MDBNavLink className=\"black-text\" to=\"kontakt\">KONTAKT</MDBNavLink>\n        //           </MDBNavItem>\n        //         </MDBNavbarNav>\n        //       </MDBCollapse>\n        //     </MDBNavbar>\n         \n\n        // </header>\n\n\n// wersja 2\n\n<header id=\"header\">\n            <MDBNavbar  light expand=\"md\" className=\"navBar  z-depth-0\" >\n              <MDBNavbarBrand href=\"/\" className=\"black-text\">\n              <strong>A+B LOGO</strong>\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.onClick} />\n              <MDBCollapse isOpen={this.state.collapse} navbar>\n                <MDBNavbarNav right>\n                  <MDBNavItem >\n                <MDBNavLink className=\"black-text\" to=\"/projekty\">PROJEKTY</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                <MDBNavLink className=\"black-text\" to=\"/architektura\">ARCHITEKTURA</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                <MDBNavLink className=\"black-text\" to=\"/wnetrza\">WNĘTRZA</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                <MDBNavLink className=\"black-text\" to=\"kontakt\">KONTAKT</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBNavbar>\n         \n\n        </header>\n\n    );\n  }\n}\n\n\n\nexport default Navigation;","import React from \"react\";\nimport {MDBIcon, MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer, MDBRow, MDBCol } from\n\"mdbreact\";\nimport './startPage.css'\n\nconst StartPage = () => {\n  return (\n    \n  <MDBRow >\n    <MDBCol sm=\"12\" className=\"displayIntro \">\n    <MDBContainer className=\"carousel \" >\n     \n      <MDBCarousel activeItem={1} length={3} showControls={false} showIndicators={false} className=\"z-depth-0\">\n        <MDBCarouselInner>\n          <MDBCarouselItem itemId=\"1\">\n            <MDBView>\n              <div className=\"d-block w-100 \" id='firstSlide'  />\n              \n            </MDBView>\n            <MDBCarouselCaption>\n              \n            </MDBCarouselCaption>\n          </MDBCarouselItem>\n          <MDBCarouselItem itemId=\"2\">\n            <MDBView>\n                  <div className=\"d-block w-100\" id=\"secondSlide\" />\n              \n            </MDBView>\n           \n          </MDBCarouselItem>\n          <MDBCarouselItem itemId=\"3\">\n            <MDBView>\n                  <div className=\"d-block w-100\" id=\"thirdSlide\" />\n             \n            </MDBView>\n    \n          </MDBCarouselItem>\n          \n        </MDBCarouselInner>\n      </MDBCarousel>\n      <MDBRow className=\"iconRow\">\n            <MDBCol className=\"iconsCol\" sm=\"12\">\n                <MDBIcon fab icon=\"facebook-f\" />\n              <MDBIcon fab icon=\"instagram\" />\n             </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n      </MDBCol>\n    </MDBRow>\n  );\n}\n\nexport default StartPage;","import React, { Component } from \"react\";\nimport { MDBContainer,MDBCol,MDBRow} from \"mdbreact\";\nimport Navigation from './components/header/nav'\nimport StartPage from './components/startPage/startPage'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './style.css'\nclass App extends Component {\n\n  state={\n    \n  }\n\n  render(){\n\n    return (\n     \n        <Router>\n           <MDBContainer fluid>\n           {/* NAVIGATION */}\n            <MDBRow >\n              <MDBCol sm=\"12\" id=\"naviCol\">\n                <Navigation/>\n              </MDBCol>\n              </MDBRow>\n              {/* DISPLAY SECTIONS */}\n                <Route path=\"/\" exact component={StartPage} />\n                <Route path=\"/projekty\" exact component={null} />\n                <Route path=\"/architektura\" exact component={null} />\n                <Route path=\"/kontakt\" exact component={null} />\n          </MDBContainer>\n          \n        </Router>\n      \n    );\n  }\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}